// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: sdk/types.proto

package sdkproto

import (
	commonproto "github.com/brevis-network/brevis-sdk/sdk/proto/commonproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ReceiptData is a request for proof for some data under an EVM receipt
type ReceiptData struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	BlockNum uint64                 `protobuf:"varint,1,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	// hex encoded tx hash
	TxHash string `protobuf:"bytes,2,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	// must at least contain one field
	Fields             []*Field `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	ReceiptDataJsonHex string   `protobuf:"bytes,4,opt,name=receipt_data_json_hex,json=receiptDataJsonHex,proto3" json:"receipt_data_json_hex,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ReceiptData) Reset() {
	*x = ReceiptData{}
	mi := &file_sdk_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiptData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptData) ProtoMessage() {}

func (x *ReceiptData) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptData.ProtoReflect.Descriptor instead.
func (*ReceiptData) Descriptor() ([]byte, []int) {
	return file_sdk_types_proto_rawDescGZIP(), []int{0}
}

func (x *ReceiptData) GetBlockNum() uint64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *ReceiptData) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *ReceiptData) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ReceiptData) GetReceiptDataJsonHex() string {
	if x != nil {
		return x.ReceiptDataJsonHex
	}
	return ""
}

// Field represents a field in an EVM log that we want the validity to be proven by Brevis
type Field struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// address. the contract which emitted the log
	Contract string `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	// the index of the log in the transaction receipt, starting from 0.
	LogPos uint32 `protobuf:"varint,2,opt,name=log_pos,json=logPos,proto3" json:"log_pos,omitempty"`
	// the event id (aka topic[0]) of the log
	EventId string `protobuf:"bytes,3,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// the value of the field we want to prove
	Value string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	// true if the field is a topic, false if the field is in log data
	IsTopic bool `protobuf:"varint,5,opt,name=is_topic,json=isTopic,proto3" json:"is_topic,omitempty"`
	// the index of the field in the log
	FieldIndex    uint32 `protobuf:"varint,6,opt,name=field_index,json=fieldIndex,proto3" json:"field_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Field) Reset() {
	*x = Field{}
	mi := &file_sdk_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_sdk_types_proto_rawDescGZIP(), []int{1}
}

func (x *Field) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *Field) GetLogPos() uint32 {
	if x != nil {
		return x.LogPos
	}
	return 0
}

func (x *Field) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *Field) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Field) GetIsTopic() bool {
	if x != nil {
		return x.IsTopic
	}
	return false
}

func (x *Field) GetFieldIndex() uint32 {
	if x != nil {
		return x.FieldIndex
	}
	return 0
}

// StorageData is a request for proof for some data in an EVM storage slot
type StorageData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// from which block to fetch the storage value
	BlockNum uint64 `protobuf:"varint,1,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	// hex encoded address of the account
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// the hex encoded "slot" of a storage.
	// see https://docs.soliditylang.org/en/latest/internals/layout_in_storage.html
	Slot string `protobuf:"bytes,3,opt,name=slot,proto3" json:"slot,omitempty"`
	// the value stored in the storage slot. decoding is based on Go's big.Int SetString.
	// must not exceed 32 bytes
	Value              string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	StorageDataJsonHex string `protobuf:"bytes,5,opt,name=storage_data_json_hex,json=storageDataJsonHex,proto3" json:"storage_data_json_hex,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *StorageData) Reset() {
	*x = StorageData{}
	mi := &file_sdk_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageData) ProtoMessage() {}

func (x *StorageData) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageData.ProtoReflect.Descriptor instead.
func (*StorageData) Descriptor() ([]byte, []int) {
	return file_sdk_types_proto_rawDescGZIP(), []int{2}
}

func (x *StorageData) GetBlockNum() uint64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *StorageData) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *StorageData) GetSlot() string {
	if x != nil {
		return x.Slot
	}
	return ""
}

func (x *StorageData) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *StorageData) GetStorageDataJsonHex() string {
	if x != nil {
		return x.StorageDataJsonHex
	}
	return ""
}

// TransactionData is a request for proof for some EVM transaction
// Only transaction type 0 and 2 are supported
type TransactionData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// hex encoded tx hash
	Hash     string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	ChainId  uint64 `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	BlockNum uint64 `protobuf:"varint,3,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	Nonce    uint64 `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// this field represents `GasPrice` for legacy tx (type 0) and `GasTipCap` for dynamic fee tx (type 2)
	GasTipCapOrGasPrice string `protobuf:"bytes,5,opt,name=gas_tip_cap_or_gas_price,json=gasTipCapOrGasPrice,proto3" json:"gas_tip_cap_or_gas_price,omitempty"`
	// this field is ignored for legacy tx (type 0) and represents `GasFeeCap` for dynamic fee tx (type 2)
	GasFeeCap string `protobuf:"bytes,6,opt,name=gas_fee_cap,json=gasFeeCap,proto3" json:"gas_fee_cap,omitempty"`
	GasLimit  uint64 `protobuf:"varint,7,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	// address
	From string `protobuf:"bytes,8,opt,name=from,proto3" json:"from,omitempty"`
	// address
	To string `protobuf:"bytes,9,opt,name=to,proto3" json:"to,omitempty"`
	// decoding is based on Go's big.Int SetString. must be less than uint256 max
	Value                  string `protobuf:"bytes,10,opt,name=value,proto3" json:"value,omitempty"`
	TransactionDataJsonHex string `protobuf:"bytes,11,opt,name=transaction_data_json_hex,json=transactionDataJsonHex,proto3" json:"transaction_data_json_hex,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TransactionData) Reset() {
	*x = TransactionData{}
	mi := &file_sdk_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionData) ProtoMessage() {}

func (x *TransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionData.ProtoReflect.Descriptor instead.
func (*TransactionData) Descriptor() ([]byte, []int) {
	return file_sdk_types_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionData) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *TransactionData) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *TransactionData) GetBlockNum() uint64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *TransactionData) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *TransactionData) GetGasTipCapOrGasPrice() string {
	if x != nil {
		return x.GasTipCapOrGasPrice
	}
	return ""
}

func (x *TransactionData) GetGasFeeCap() string {
	if x != nil {
		return x.GasFeeCap
	}
	return ""
}

func (x *TransactionData) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *TransactionData) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TransactionData) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TransactionData) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TransactionData) GetTransactionDataJsonHex() string {
	if x != nil {
		return x.TransactionDataJsonHex
	}
	return ""
}

type CustomInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JsonBytes     string                 `protobuf:"bytes,1,opt,name=json_bytes,json=jsonBytes,proto3" json:"json_bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CustomInput) Reset() {
	*x = CustomInput{}
	mi := &file_sdk_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomInput) ProtoMessage() {}

func (x *CustomInput) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomInput.ProtoReflect.Descriptor instead.
func (*CustomInput) Descriptor() ([]byte, []int) {
	return file_sdk_types_proto_rawDescGZIP(), []int{4}
}

func (x *CustomInput) GetJsonBytes() string {
	if x != nil {
		return x.JsonBytes
	}
	return ""
}

type IndexedReceipt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         uint32                 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Data          *ReceiptData           `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexedReceipt) Reset() {
	*x = IndexedReceipt{}
	mi := &file_sdk_types_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexedReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexedReceipt) ProtoMessage() {}

func (x *IndexedReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_types_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexedReceipt.ProtoReflect.Descriptor instead.
func (*IndexedReceipt) Descriptor() ([]byte, []int) {
	return file_sdk_types_proto_rawDescGZIP(), []int{5}
}

func (x *IndexedReceipt) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *IndexedReceipt) GetData() *ReceiptData {
	if x != nil {
		return x.Data
	}
	return nil
}

type IndexedStorage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         uint32                 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Data          *StorageData           `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexedStorage) Reset() {
	*x = IndexedStorage{}
	mi := &file_sdk_types_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexedStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexedStorage) ProtoMessage() {}

func (x *IndexedStorage) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_types_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexedStorage.ProtoReflect.Descriptor instead.
func (*IndexedStorage) Descriptor() ([]byte, []int) {
	return file_sdk_types_proto_rawDescGZIP(), []int{6}
}

func (x *IndexedStorage) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *IndexedStorage) GetData() *StorageData {
	if x != nil {
		return x.Data
	}
	return nil
}

type IndexedTransaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         uint32                 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Data          *TransactionData       `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexedTransaction) Reset() {
	*x = IndexedTransaction{}
	mi := &file_sdk_types_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexedTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexedTransaction) ProtoMessage() {}

func (x *IndexedTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_types_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexedTransaction.ProtoReflect.Descriptor instead.
func (*IndexedTransaction) Descriptor() ([]byte, []int) {
	return file_sdk_types_proto_rawDescGZIP(), []int{7}
}

func (x *IndexedTransaction) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *IndexedTransaction) GetData() *TransactionData {
	if x != nil {
		return x.Data
	}
	return nil
}

type Proof struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Proof         string                      `protobuf:"bytes,1,opt,name=proof,proto3" json:"proof,omitempty"`
	CircuitInfo   *commonproto.AppCircuitInfo `protobuf:"bytes,2,opt,name=circuit_info,json=circuitInfo,proto3" json:"circuit_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Proof) Reset() {
	*x = Proof{}
	mi := &file_sdk_types_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Proof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proof) ProtoMessage() {}

func (x *Proof) ProtoReflect() protoreflect.Message {
	mi := &file_sdk_types_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proof.ProtoReflect.Descriptor instead.
func (*Proof) Descriptor() ([]byte, []int) {
	return file_sdk_types_proto_rawDescGZIP(), []int{8}
}

func (x *Proof) GetProof() string {
	if x != nil {
		return x.Proof
	}
	return ""
}

func (x *Proof) GetCircuitInfo() *commonproto.AppCircuitInfo {
	if x != nil {
		return x.CircuitInfo
	}
	return nil
}

var File_sdk_types_proto protoreflect.FileDescriptor

const file_sdk_types_proto_rawDesc = "" +
	"\n" +
	"\x0fsdk/types.proto\x12\x03sdk\x1a\x19common/circuit_data.proto\"\x9a\x01\n" +
	"\vReceiptData\x12\x1b\n" +
	"\tblock_num\x18\x01 \x01(\x04R\bblockNum\x12\x17\n" +
	"\atx_hash\x18\x02 \x01(\tR\x06txHash\x12\"\n" +
	"\x06fields\x18\x03 \x03(\v2\n" +
	".sdk.FieldR\x06fields\x121\n" +
	"\x15receipt_data_json_hex\x18\x04 \x01(\tR\x12receiptDataJsonHex\"\xa9\x01\n" +
	"\x05Field\x12\x1a\n" +
	"\bcontract\x18\x01 \x01(\tR\bcontract\x12\x17\n" +
	"\alog_pos\x18\x02 \x01(\rR\x06logPos\x12\x19\n" +
	"\bevent_id\x18\x03 \x01(\tR\aeventId\x12\x14\n" +
	"\x05value\x18\x04 \x01(\tR\x05value\x12\x19\n" +
	"\bis_topic\x18\x05 \x01(\bR\aisTopic\x12\x1f\n" +
	"\vfield_index\x18\x06 \x01(\rR\n" +
	"fieldIndex\"\xa1\x01\n" +
	"\vStorageData\x12\x1b\n" +
	"\tblock_num\x18\x01 \x01(\x04R\bblockNum\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x12\n" +
	"\x04slot\x18\x03 \x01(\tR\x04slot\x12\x14\n" +
	"\x05value\x18\x04 \x01(\tR\x05value\x121\n" +
	"\x15storage_data_json_hex\x18\x05 \x01(\tR\x12storageDataJsonHex\"\xdc\x02\n" +
	"\x0fTransactionData\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\tR\x04hash\x12\x19\n" +
	"\bchain_id\x18\x02 \x01(\x04R\achainId\x12\x1b\n" +
	"\tblock_num\x18\x03 \x01(\x04R\bblockNum\x12\x14\n" +
	"\x05nonce\x18\x04 \x01(\x04R\x05nonce\x125\n" +
	"\x18gas_tip_cap_or_gas_price\x18\x05 \x01(\tR\x13gasTipCapOrGasPrice\x12\x1e\n" +
	"\vgas_fee_cap\x18\x06 \x01(\tR\tgasFeeCap\x12\x1b\n" +
	"\tgas_limit\x18\a \x01(\x04R\bgasLimit\x12\x12\n" +
	"\x04from\x18\b \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\t \x01(\tR\x02to\x12\x14\n" +
	"\x05value\x18\n" +
	" \x01(\tR\x05value\x129\n" +
	"\x19transaction_data_json_hex\x18\v \x01(\tR\x16transactionDataJsonHex\",\n" +
	"\vCustomInput\x12\x1d\n" +
	"\n" +
	"json_bytes\x18\x01 \x01(\tR\tjsonBytes\"L\n" +
	"\x0eIndexedReceipt\x12\x14\n" +
	"\x05index\x18\x01 \x01(\rR\x05index\x12$\n" +
	"\x04data\x18\x02 \x01(\v2\x10.sdk.ReceiptDataR\x04data\"L\n" +
	"\x0eIndexedStorage\x12\x14\n" +
	"\x05index\x18\x01 \x01(\rR\x05index\x12$\n" +
	"\x04data\x18\x02 \x01(\v2\x10.sdk.StorageDataR\x04data\"T\n" +
	"\x12IndexedTransaction\x12\x14\n" +
	"\x05index\x18\x01 \x01(\rR\x05index\x12(\n" +
	"\x04data\x18\x02 \x01(\v2\x14.sdk.TransactionDataR\x04data\"X\n" +
	"\x05Proof\x12\x14\n" +
	"\x05proof\x18\x01 \x01(\tR\x05proof\x129\n" +
	"\fcircuit_info\x18\x02 \x01(\v2\x16.common.AppCircuitInfoR\vcircuitInfob\x06proto3"

var (
	file_sdk_types_proto_rawDescOnce sync.Once
	file_sdk_types_proto_rawDescData []byte
)

func file_sdk_types_proto_rawDescGZIP() []byte {
	file_sdk_types_proto_rawDescOnce.Do(func() {
		file_sdk_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sdk_types_proto_rawDesc), len(file_sdk_types_proto_rawDesc)))
	})
	return file_sdk_types_proto_rawDescData
}

var file_sdk_types_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_sdk_types_proto_goTypes = []any{
	(*ReceiptData)(nil),                // 0: sdk.ReceiptData
	(*Field)(nil),                      // 1: sdk.Field
	(*StorageData)(nil),                // 2: sdk.StorageData
	(*TransactionData)(nil),            // 3: sdk.TransactionData
	(*CustomInput)(nil),                // 4: sdk.CustomInput
	(*IndexedReceipt)(nil),             // 5: sdk.IndexedReceipt
	(*IndexedStorage)(nil),             // 6: sdk.IndexedStorage
	(*IndexedTransaction)(nil),         // 7: sdk.IndexedTransaction
	(*Proof)(nil),                      // 8: sdk.Proof
	(*commonproto.AppCircuitInfo)(nil), // 9: common.AppCircuitInfo
}
var file_sdk_types_proto_depIdxs = []int32{
	1, // 0: sdk.ReceiptData.fields:type_name -> sdk.Field
	0, // 1: sdk.IndexedReceipt.data:type_name -> sdk.ReceiptData
	2, // 2: sdk.IndexedStorage.data:type_name -> sdk.StorageData
	3, // 3: sdk.IndexedTransaction.data:type_name -> sdk.TransactionData
	9, // 4: sdk.Proof.circuit_info:type_name -> common.AppCircuitInfo
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_sdk_types_proto_init() }
func file_sdk_types_proto_init() {
	if File_sdk_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sdk_types_proto_rawDesc), len(file_sdk_types_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sdk_types_proto_goTypes,
		DependencyIndexes: file_sdk_types_proto_depIdxs,
		MessageInfos:      file_sdk_types_proto_msgTypes,
	}.Build()
	File_sdk_types_proto = out.File
	file_sdk_types_proto_goTypes = nil
	file_sdk_types_proto_depIdxs = nil
}
